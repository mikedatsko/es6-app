{"version":3,"sources":["app.js"],"names":["Data","key","data","prompt","console","error","localStorage","getItem","setItem","removeItem","Events","element","eventName","callback","details","event","CustomEvent","document","dispatchEvent","removeEventListener","events","Markup","detail","tag","content","className","id","undefined","attrs","options","i","optionsDefault","hasOwnProperty","createElement","type","value","innerHTML","parent","method","length","name","attr","prnt","appendChild","action","find","query","remove","querySelectorAll","markup","Utils","body","utils","elements","AddTodo","_this","this","_classCallCheck","row","create","cell","form","inputGroup","addField","placeholder","buttonGroup","on","subscribe","edit","addButton","todos","read","JSON","stringify","index","text","push","reset","preventDefault","checked","todo","send","update","parse","todosEl","indexField","forEach","todoEl","todosBodyEl","todoCellCheckboxEl","width","getList","todoCellActionsEl","self","getElementById","todoActionEditEl","todoCheckboxEl","todoCellTextEl","todoActionDeleteEl","delete","App","ListTodos","app"],"mappings":"6XACMA,yGAEGC,EAAKC,GAIV,MAHAD,GAAMA,GAAOE,OAAO,QACpBD,EAAOA,GAAQC,OAAO,aAEH,KAARF,GACTG,QAAQC,MAAM,WACP,OAGW,KAATH,GACTE,QAAQC,MAAM,YATVJ,OAGNK,cAAWL,QAAQA,EAAAC,gCAGlBD,GAWD,OAAmB,KAARA,EARTG,MADFA,SAAIC,MAAOH,YACTE,CAaF,IAAMF,GAAOI,aAAaC,QAAQN,EARnC,OAAAC,KAWGE,QAAQC,MAAM,YACP,kCAMJJ,EAAKC,GAPRE,MAHFH,GAAMC,GAAOI,OAAAA,QAYbJ,EAAOA,GAAQC,OAAO,aATN,KAAdC,GACAA,QAAAC,MAAA,WACD,OAGF,KAAAH,GAYGE,QAAQC,MAAM,YACP,GATTH,aAAeC,QAAOF,OAKrBK,cAAAE,QAAAP,EAAAC,IAQCE,QAAQC,MAAM,kBAXZ,kCAMFD,GAeF,WAAmB,MAdjBH,EAAAA,GAAOE,OAAP,UAGFC,QAAKE,MAAAA,WACHF,GAeGE,aAAaC,QAAQN,OAK1BK,cAAaG,WAbRR,IAHLK,QAAAA,MAAaE,kBACd,YAMGJ,KAAAA,GAAQC,MAETK,uGAEDC,EAAKL,EAAaC,GAChBH,EAAAA,iBAAcQ,EAAdC,GAAA,qCAgBMD,EAAWC,GAZnBP,SAAAA,iBAAwBL,EAAxBY,GAAA,gCAgBGD,EAAWE,GACdA,EAAUA,KAEV,IAAMC,GAAQ,GAAIC,aAAYJ,GAf5BV,OAAOY,GAmBTG,UAASC,cAAcH,yCAIvBE,SAASE,oBAAoBP,UAAWC,UAAU,YAjBnDO,OAAA,GAAAV,QAuBGW,2GApBFJ,GAOEK,GAAAA,IADuCC,IAAzC,MA0BEC,QAAS,GAtBXP,OAAAA,OACDQ,UAAA,GAwBGC,GAAI,GACJb,aAAUc,GACVC,SAGFC,GAAUA,KAEV,KAAI,GAAIC,KAAKC,GACNF,EAAQG,eAAeF,KAC1BD,EAAQC,GAAKC,EAAeD,GAIhC,IAAInB,OAAAA,EAKFA,IAHkB,mBAAhBkB,EAAQN,KACVZ,EAAUM,SAASgB,cAAc,SACjCtB,EAAQuB,KAAO,WACfvB,EAAQwB,MAAQ,GA9BlBxB,EAAAM,SAAAgB,cAAAJ,EAAAN,KAGAZ,EAAAyB,UAAAP,EAAAL,QAEAK,EAAAJ,YAiCEd,EAAQc,WAAaI,EAAQJ,WA7B7BD,EAAAA,KACAa,EAAAA,GAAQR,EAHaH,IAMXC,SAAVd,EAAAA,MACAe,EAAAA,OAAO,qBAPcjB,EAAvB2B,OAAA,QA2CIT,EAAQD,MAAMW,QA/BlBV,EAAID,MAASG,QAAAA,SAAAA,GACX,IAAKF,GAAAA,KAAQG,GAGdrB,EAAA6B,GAAAC,EAAAD,KAOC7B,EAAQwB,OAAQ,CACjB,GAJDO,GAIO,gBAAAb,GAAAQ,OACL1B,SAAUM,cAASgB,EAAcJ,QAClCA,EAAAQ,MAED1B,KAAAA,EAEA,MA+BIP,SAAQC,MAAM,qBA/BdwB,CAEHa,GAAAC,YAAAhC,OAEDM,UAAIY,KAAJc,YAAgBhC,EAEf,OAAAA,kCAGCA,EAAQiC,GACAN,KAASO,KAAjBC,GACD,GAAAV,UAAAZ,iCAGCK,GACaW,KAAXK,KAAAC,GACE,GAAAC,sCAGID,GAEL,MALC7B,UAAA+B,iBAAAF,YASNG,OAAIpB,GAAQQ,QAKVa,2GAKD,IAVD,GASER,GAAKC,GACAb,EAAA,EAAAA,EAAA,EAAAA,IACLb,GAHC,6BAGQkC,KAAKR,MAAd,GAAcA,KAAYhC,UAE5B,OAAAe,YAkCE0B,MAAQ,GAAIF,OA7BdG,mBAiCF,QAAAC,KAAc,GAAAC,GAAAC,IAAAC,iBAAAD,KAAAF,EACZ,IAAMI,GAAMT,OAAOU,QACjBlC,UAAW,MA/BbY,OAAMgB,cAmCAO,EAAOX,OAAOU,QAClBlC,UAAW,YACXY,OAAQqB,IA9BXG,EAAAZ,OAAAU,QAkCGpC,IAAK,OACLK,QACIgB,OAAQ,uBACRN,OAAQ,SAlCZW,OAASW,IAuCLE,EAAab,OAAOU,QACxBlC,UAAW,cACXY,OAAQwB,IAGJE,EAAWd,OAAOU,QACtBpC,IAAK,QAvCPK,QACIF,KAAK,SACTsC,YAAgBlC,iBAEfL,UAAA,eACDY,OAAOX,IA2CDuC,EAAchB,OAAOU,QACzBpC,IAAK,OACLE,UAAW,kBACXY,OAAQyB,IAxCRR,EA2CgBL,OAAOU,QAzC3BpC,IAAA,SAAcK,QA4CNM,KAAM,WAEVV,QAAS,MA7CXC,UAAYwB,kBACVxB,OAAAA,GAiDFL,QAAO8C,GAAGL,EAAM,SAAU,SAAA9C,GA7C1BA,EAAM6C,iBACJnC,EAAAA,IAAAA,EAAWsC,KAiDb3C,OAAO+C,UAAU,iBAAkB,SAAApD,GA7CnC,GAAM8C,GAAOZ,EAAOU,MAElB/B,GACIgB,MAHNW,EAAAa,KAAAP,EAAAE,EAAAM,EAAAvD,sDAWEuB,EAAAA,GAF+B,GAAjCiC,GAAApE,KAAAqE,KAAA,QAKMR,GAOJ1B,EAAQyB,KAAAA,MAAAA,IANRvC,KACAK,KAAAA,OACIM,QAAMsC,KACRC,gBAMER,EAAAA,MAA4B,SAA5BA,EAAchB,KAAOU,OAAOE,EAAAa,OAChCnD,GAAKsC,EAD2Ba,MAAAvC,OAAAwC,KAAAZ,EAAA5B,MAEhCV,EAAAA,KAAAA,SACAY,EAAAA,MAAQyB,UA0CRQ,EAAMM,MAvCFP,KAAAA,EAAYpB,MAChB1B,SAAK,IAMLc,KAAAA,OAAQ4B,QAAAA,KAAAA,UAAAA,IAwCVJ,EAAKgB,QApCH9D,OAAAA,KAAM+D,+CAyCLjB,EAAME,EAAUM,EAAWvD,GArC9BM,GAAAA,EAAO+C,KAkDLN,EAAK3B,KAAKC,MAAQ,WAjDlB,CAAcpB,OAAMO,QAuClBC,IAAK,QArCPK,QAAqBM,KAAA,WAAQM,KAAA,SAyCvBL,MAAO,SA5CfV,UAAA,eAODY,OAAAwB,IA8CC,GAAKA,EAAKa,MA9BTb,EAJDa,MAIOvC,MAAArB,EAAA4D,UAXP,CAAYzB,OAAAU,QACVW,IAAAA,QACApE,QAFFgC,KAGO,WACLoC,KAAQE,UACTrC,MAAArB,EAAA4D,QAEDjD,UAAI,eACF6C,OAAOT,IAMLkB,EAAAA,UAAS,OAFAhB,EAAX5B,MAAArB,EAAAkE,KAAAL,cAQFd,qBAEAzC,QAAAA,KAAO6D,GAAAA,GAAAA,IAAAA,iBAAAA,KAAAA,EACR,IAAAX,GAAApE,KAAAqE,KAAA,QA2CMD,KACHA,KACApE,KAAKgF,OAAO,QA3CXrB,KAAME,UAAUM,KAGf9C,OAAAA,UAAK,iBADuB,WAE5BK,EAAAA,mEASFiC,GAAAA,GAAAL,KACDc,EAAApE,KAAAqE,KAAA,QAwCDD,GAAQE,KAAKW,MAAMb,EArCjB,IAAAc,GAAIC,SAAapC,eAAc,aAC7B1B,GAAAA,UAD6B,EAO7BE,IAAAA,GAAWwB,OAAAU,QACXtB,IAAAA,QAR6BA,OAA/B+C,GAYD,KAAAd,EAAA/B,OAoCC,OAAO,CAhCV+B,GAAAgB,QAAA,SAAAN,EAAAN,GAoCG,GAAMa,GAAStC,OAAOU,QACpBpC,IAAK,KACLc,OAAQmD,EACR/D,UAAWuD,EAAKD,QAAU,UAAY,KAjC5CU,EAAcxC,OAAAU,QAAApC,IAAA,KAsCRc,OAAQkD,EAtCA3D,QAwCJ8D,MAAO,SApCRR,EAAgBV,OAAKC,QAC3BlD,IAAA,KAyCGc,OAAQkD,EAvCZnE,QAAO+C,EAAUQ,KACflD,UAAKkE,EAALZ,QAAA,UAAA,KA2CMa,EAAoB3C,OAAOU,QAC/BpC,IAAK,KACLc,OAAQkD,EACR3D,QAzCEiE,MAAO,SAIPT,EAAmBU,OAAAA,QACzBV,IAAAA,OA2CI3D,UAAW,wBAA0BuD,EAAKD,QAAU,QAAU,aAzClE1C,OAAMmD,IAANO,EAAA9C,OAAAU,QA8CIpC,IAAK,SAzCTK,QACEM,KAAO,WA4CLT,UAAW,sBAzCf6C,QAAMgB,mDACJjD,OAAMkD,IAGJ9D,EAAWwB,OAAeU,QAHCpC,IAA7B,SA+CEK,QAzCI6D,KAAAA,WAEJpD,UAAQkD,wBACR3D,QAAO,mDAHgCS,OAAzCuD,GASErE,QAAAA,GAAKkE,EAD8B,QAAA,SAAA1E,GAEnCsB,EAAAA,iBACAb,EAAAA,QAASwD,EAH0BgB,EAAAC,EAAA3B,EAAAU,EAAAN,KA8CrCtD,OAAO8C,GAAG+B,EAAgB,QAAS,SAAAlF,GAvCnCA,EAAM6E,iBACJrE,EAAAA,QADsCgE,EAAAS,EAAAC,EAAA3B,EAAAU,EAAAN,KAAAtD,OAAxC8C,GAAAgC,EAAA,QAAA,SAAAnF,GA6CE8E,EAAKM,OAAOzB,EAAOJ,KAnCnB7C,OAAAA,GAAAA,EAAW,QAAA,SAAAV,GACXsB,OAAAA,KAAQoD,kBAHVT,KAAAA,EA2CIN,MAAOA,wCA9BTrC,EAAQuD,EAAAA,EAAAA,EAAAA,EAAAA,GAPV,8BAAAI,EAAAvE,WAWEF,EAAAA,UADuC,GAEvCK,EACIM,UAAM,gCAEVT,EAAWA,UAAA,GACXD,EAAAA,SAAS,IAN8B+D,EAAzC9D,UAAA,UA2CAuE,EAAevE,UAAY,4BAjC3BL,EAAUqE,UAAAA,UACR1E,EAAAA,SAAM+D,GAqCVR,EAAMI,GAASM,EAjCb5D,KAAAA,OAAO8C,QAAG+B,KAAAA,UAAgB3B,IACxBvD,OAAAA,KAAM+D,iDAqCLJ,EAAOJ,GAjCVlD,EAAAA,OAAAsD,EAAUwB,GACRL,KAAAA,OAAKM,QAAOzB,KAAOJ,UAAnBA,IACDlD,OAFD6D,KAAA,2BAOIP,IAF4B,QAAA0B,KAA9B3C,gBAAAD,KAAA4C,EADF,IAAA9C,UAtEF,GAAA+C,YA6EDV,WAuCGW,IAAM,GAAIF","file":"app.js","sourcesContent":["\nclass Data {\n\n  create(key, data) {\n    key = key || prompt('Key:');\n    data = data || prompt('Data:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (typeof data === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    localStorage.setItem(key, data);\n  }\n\n  read(key) {\n    if (typeof key === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      console.error('No data');\n      return false;\n    }\n\n    return data;\n  }\n\n  update(key, data) {\n    key = key || prompt('Key:');\n    data = data || prompt('Data:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (typeof data === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    if (!localStorage.getItem(key)) {\n      console.error('No data found');\n      return false;\n    }\n\n    localStorage.setItem(key, data);\n  }\n\n  delete(key) {\n    key = key || prompt('Key:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (!localStorage.getItem(key)) {\n      console.error('No data found');\n      return false;\n    }\n\n    localStorage.removeItem(key);\n  }\n}\n\nconst data = new Data();\n\nclass Events {\n\n  on(element, eventName, callback) {\n    element.addEventListener(eventName, callback, false);\n  }\n\n  subscribe(eventName, callback) {\n    document.addEventListener(eventName, callback, false);\n  }\n\n  send(eventName, details) {\n    details = details || {};\n\n    const event = new CustomEvent(eventName, {\n      detail: details\n    });\n\n    document.dispatchEvent(event);\n  }\n\n  deleteEvent() {\n    document.removeEventListener(eventName, callback, false);\n  }\n}\n\nconst events = new Events();\n\nclass Markup {\n\n  create(options) {\n    // tag\n    // content\n    // parent\n    // className\n    // id\n    // callback\n\n    const optionsDefault = {\n      tag: 'div',\n      content: '',\n      parent: 'body',\n      className: '',\n      id: '',\n      callback: undefined,\n      attrs: []\n    };\n\n    options = options || {};\n\n    for(let i in optionsDefault) {\n      if (!options.hasOwnProperty(i)) {\n        options[i] = optionsDefault[i];\n      }\n    }\n\n    let element;\n\n    if (options.tag === 'input#checkbox') {\n      element = document.createElement('input');\n      element.type = 'checkbox';\n      element.value = 1;\n    } else {\n      element = document.createElement(options.tag);\n    }\n\n    element.innerHTML = options.content;\n\n    if (options.className) {\n      element.className += options.className;\n    }\n\n    if (options.id) {\n      element.id = options.id;\n    }\n\n    if (options.tag === 'form') {\n      element.action = 'javascript:void(0)';\n      element.method = 'post';\n    }\n\n    if (options.attrs.length) {\n      options.attrs.forEach(attr => {\n        for (const name in attr) {\n          switch (name) {\n            default:\n              element[name] = attr[name];\n              break;\n          }\n        }\n      });\n    }\n\n    if (options.parent) {\n      const prnt = typeof options.parent === 'string'\n        ? document.querySelector(options.parent)\n        : options.parent;\n\n      if (!prnt) {\n        console.error('No element found');\n        return false;\n      }\n      prnt.appendChild(element);\n    } else {\n      document.body.appendChild(element);\n    }\n    return element;\n  }\n\n  update(query, content) {\n    const elements = this.find(query);\n    elements[0].innerHTML = content;\n  }\n\n  delete(query) {\n    const elements = this.find(query);\n    elements[0].remove();\n  }\n\n  find(query) {\n    const elements = document.querySelectorAll(query);\n    return elements;\n  }\n}\n\nconst markup = new Markup();\n\n\nclass Utils {\n\n  getId() {\n    let letters = 'abcdefghijklmnopqrstuvwxyz';\n    let id = '';\n    for (let i = 0; i < 6; i++ ) {\n      id += letters[Math.floor(Math.random() * 26)];\n    }\n    return id;\n  }\n}\n\nconst utils = new Utils();\n\nclass AddTodo {\n\n  constructor() {\n    const row = markup.create({\n      className: 'row',\n      parent: '#todo_add'\n    });\n\n    const cell = markup.create({\n      className: 'col-lg-12',\n      parent: row\n    });\n    \n    const form = markup.create({\n      tag: 'form',\n      attrs: [\n        { action: 'javascript:void(0)' },\n        { method: 'POST' }\n      ],\n      parent: cell\n    });\n    \n    const inputGroup = markup.create({\n      className: 'input-group',\n      parent: form\n    });\n\n    const addField = markup.create({\n      tag: 'input',\n      attrs: [\n        { type: 'text' },\n        { placeholder: 'Todo text...' }\n      ],\n      className: 'form-control',\n      parent: inputGroup\n    });\n\n    const buttonGroup = markup.create({\n      tag: 'span',\n      className: 'input-group-btn',\n      parent: inputGroup\n    });\n\n    const addButton = markup.create({\n      tag: 'button',\n      attrs: [\n        { type: 'submit' }\n      ],\n      content: 'Add',\n      className: 'btn btn-primary',\n      parent: buttonGroup\n    });\n\n    events.on(form, 'submit', event => {\n      event.preventDefault();\n      this.add(form, addField);\n    });\n\n    events.subscribe('edit-todo-item', event => {\n      var details = event.detail;\n\n      if (!details.todo) { return }\n\n      this.edit(form, addField, addButton, details);\n    });\n  }\n\n  add(form, addField) {\n    let todos = data.read('todos');\n\n    if (!todos) {\n      todos = [];\n      data.create('todos', JSON.stringify([]));\n    } else {\n      todos = JSON.parse(todos);\n    }\n\n    if (form.type && form.type.value === 'save' && form.index) {\n      todos[+form.index.value].text = addField.value;\n      form.type.remove();\n      form.index.remove();\n    } else {\n      todos.push({\n        text: addField.value,\n        checked: false\n      });\n    }\n\n    data.update('todos', JSON.stringify(todos));\n\n    form.reset();\n\n    events.send('get-todos-list');\n  }\n\n  edit(form, addField, addButton, details) {\n    if (!form.type) {\n      var typeField = markup.create({\n        tag: 'input',\n        attrs: [\n          { type: 'hidden' },\n          { name: 'type' },\n          { value: 'save' }\n        ],\n        className: 'form-control',\n        parent: form\n      });\n    } else {\n      form.type.value = 'save';\n    }\n\n    if (!form.index) {\n      var indexField = markup.create({\n        tag: 'input',\n        attrs: [\n          { type: 'hidden' },\n          { name: 'index' },\n          { value: details.index }\n        ],\n        className: 'form-control',\n        parent: form\n      });\n    } else {\n      form.index.value = details.index;\n    }\n\n    addButton.innerHTML = 'Save';\n    addField.value = details.todo.text;\n  }\n}\n\n\nclass ListTodos {\n\n  constructor() {\n    let todos = data.read('todos');\n    if (!todos) {\n      todos = [];\n      data.update('todos', JSON.stringify(todos));\n    }\n\n    events.subscribe('get-todos-list', () => {\n      this.getList();\n    });\n  }\n\n  getList() {\n    const self = this;\n    let todos = data.read('todos');\n    todos = JSON.parse(todos);\n\n    const todosEl = document.getElementById('todo_items');\n    todosEl.innerHTML = '';\n\n    const todosBodyEl = markup.create({\n      tag: 'tbody',\n      parent: todosEl\n    });\n\n    if (!todos.length) {\n      return false\n    }\n\n    todos.forEach((todo, index) => {\n      const todoEl = markup.create({\n        tag: 'tr',\n        parent: todosBodyEl,\n        className: todo.checked ? 'success' : ''\n      });\n\n      const todoCellCheckboxEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        attrs: [\n          { width: '30' }\n        ]\n      });\n\n      const todoCellTextEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        content: todo.text,\n        className: todo.checked ? 'checked' : ''\n      });\n\n      const todoCellActionsEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        attrs: [\n          { width: '70' }\n        ]\n      });\n\n      const todoCheckboxEl = markup.create({\n        tag: 'span',\n        className: 'glyphicon glyphicon-' + (todo.checked ? 'check' : 'unchecked'),\n        parent: todoCellCheckboxEl\n      });\n\n      const todoActionEditEl = markup.create({\n        tag: 'button',\n        attrs: [\n          { type: 'button' }\n        ],\n        className: 'btn btn-info btn-xs',\n        content: '<span class=\"glyphicon glyphicon-pencil\"></span>',\n        parent: todoCellActionsEl\n      });\n\n      const todoActionDeleteEl = markup.create({\n        tag: 'button',\n        attrs: [\n          { type: 'button' }\n        ],\n        className: 'btn btn-danger btn-xs',\n        content: '<span class=\"glyphicon glyphicon-remove\"></span>',\n        parent: todoCellActionsEl\n      });\n\n      events.on(todoCellCheckboxEl, 'click', event => {\n        event.preventDefault();\n        self.doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index);\n      });\n\n      events.on(todoCellTextEl, 'click', event => {\n        event.preventDefault();\n        self.doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index);\n      });\n\n      events.on(todoActionDeleteEl, 'click', event => {\n        self.delete(index, todos);\n      });\n\n      events.on(todoActionEditEl, 'click', event => {\n        events.send('edit-todo-item', {\n          todo: todo,\n          index: index\n        });\n      });\n    });\n  };\n\n  doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index) {\n    const isChecked = todoCheckboxEl.className === 'glyphicon glyphicon-check'\n\n    if (isChecked) {\n      todoEl.className = '';\n      todoCheckboxEl.className = 'glyphicon glyphicon-unchecked';\n      todoCellTextEl.className = '';\n      todo.checked = false;\n    } else {\n      todoEl.className = 'success';\n      todoCheckboxEl.className = 'glyphicon glyphicon-check';\n      todoCellTextEl.className = 'checked';\n      todo.checked = true;\n    }\n\n    todos[index] = todo;\n    data.update('todos', JSON.stringify(todos));\n    events.send('get-todos-list');\n  }\n\n  delete(index, todos) {\n    todos.splice(index, 1);\n    data.update('todos', JSON.stringify(todos));\n    events.send('get-todos-list');\n  }\n}\n\n\nclass App {\n  constructor() {\n    const addTodo = new AddTodo();\n    const listTodos = new ListTodos();\n    listTodos.getList();\n  }\n}\n\n\nconst app = new App();\n"]}