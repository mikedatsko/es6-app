{"version":3,"sources":["app.js"],"names":["Data","key","data","prompt","console","error","localStorage","getItem","value","setItem","removeItem","e","Events","element","eventName","callback","details","event","CustomEvent","document","dispatchEvent","removeEventListener","events","Markup","detail","tag","content","className","id","attrs","options","i","optionsDefault","hasOwnProperty","createElement","type","innerHTML","parent","undefined","method","length","name","attr","prnt","appendChild","action","find","query","remove","querySelectorAll","markup","Utils","body","utils","elements","AddTodo","_this","this","_classCallCheck","row","create","cell","form","inputGroup","addField","placeholder","buttonGroup","on","subscribe","edit","addButton","todos","read","JSON","stringify","index","text","push","reset","preventDefault","checked","todo","send","update","parse","todosEl","indexField","forEach","todoEl","todosBodyEl","todoCellCheckboxEl","width","getList","todoCellActionsEl","self","getElementById","todoActionEditEl","todoCheckboxEl","todoCellTextEl","todoActionDeleteEl","delete","App","ListTodos","app"],"mappings":"6XACMA,KAAAA,WAAAA,QAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,MAAAA,cAAAA,IAAAA,IAAAA,SAAAA,MAAAA,SAEGC,EAAKC,GAIV,MAHAD,GAAMA,GAAOE,OAAO,QACpBD,EAAOA,GAAQC,OAAO,aAAA,KAEXF,GACTG,QAAQC,MAAM,WAAA,OACP,KAGEH,GACTE,QAAQC,MAAM,YAAA,OANhBC,cAAWL,QAAQA,EAAAC,MAAAA,IAAAA,OAAAA,MAAAA,SAGlBD,GAWD,WAAA,KAAWA,GATXG,QAAIC,MAAOH,YAAAA,GAcEI,aAAaC,QAAQN,KAGhCG,QAAQC,MAAM,YAAA,MACPJ,IAAA,SAAAO,MAAA,SAMJP,EAAKC,GAPRE,MAHFH,GAAMC,GAAOI,OAAAA,QAYbJ,EAAOA,GAAQC,OAAO,aAAA,KATpBC,GACAA,QAAAC,MAAA,WAAA,OACD,KAGFH,GAYGE,QAAQC,MAAM,YAAA,GARhBH,aAAeC,QAAOF,OAKrBK,cAAAG,QAAAR,EAAAC,IAQCE,QAAQC,MAAM,kBAAA,MAXZJ,IAAA,SAAAO,MAAA,SAMFJ,GAeF,WAAA,MAdEH,EAAAA,GAAOE,OAAP,UAGFC,QAAKE,MAAAA,WAAAA,GAgBAA,aAAaC,QAAQN,OAK1BK,cAAaI,WAbRT,IAHLK,QAAAA,MAAaG,kBAAAA,OACdE,KAMGP,KAAAA,GAAQC,MAETO,OAAAA,WAAAA,QAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,MAAAA,cAAAA,IAAAA,IAAAA,KAAAA,MAAAA,SAEDC,EAAKP,EAAaC,GAChBH,EAAAA,iBAAcU,EAAdC,GAAAA,MAAAd,IAAA,YAAAO,MAAA,SAgBMM,EAAWC,GAZnBT,SAAAA,iBAAwBL,EAAxBc,GAAAA,MAAAd,IAAA,OAAAO,MAAA,SAgBGM,EAAWE,GACdA,EAAUA,KAEV,IAAMC,GAAQ,GAAIC,aAAYJ,GAf5BZ,OAAOc,GAmBTG,UAASC,cAAcH,MAAAA,IAAAA,cAAAA,MAAAA,WAIvBE,SAASE,oBAAoBP,UAAWC,UAAAA,OAAUJ,KAjBnDW,OAAA,GAAAV,QAuBGW,OAAAA,WAAAA,QAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,MAAAA,cAAAA,IAAAA,IAAAA,SAAAA,MAAAA,SApBFJ,GAOEK,GAAAA,IADuCC,IAAzC,MA0BEC,QAAS,GAtBXP,OAAAA,OACDQ,UAAA,GAwBGC,GAAI,GACJb,aAAAA,GACAc,SAGFC,GAAUA,KAEV,KAAI,GAAIC,KAAKC,GACNF,EAAQG,eAAeF,KAC1BD,EAAQC,GAAKC,EAAeD,GAIhC,IAAIlB,OAAAA,EAKFA,IAHkB,mBAAhBiB,EAAQL,KACVZ,EAAUM,SAASe,cAAc,SACjCrB,EAAQsB,KAAO,WACftB,EAAQL,MAAQ,GA9BlBK,EAAAM,SAAAe,cAAAJ,EAAAL,KAGAZ,EAAAuB,UAAAN,EAAAJ,QAEAI,EAAAH,YAiCEd,EAAQc,WAAaG,EAAQH,WA7B7BD,EAAAA,KACAW,EAAAA,GAAQP,EAHaF,IAMXU,SAAVvB,EAAAA,MACAc,EAAAA,OAAO,qBAPchB,EAAvB0B,OAAA,QA2CIT,EAAQD,MAAMW,QA/BlBV,EAAID,MAASG,QAAAA,SAAAA,GACX,IAAKF,GAAAA,KAAQG,GAGdpB,EAAA4B,GAAAC,EAAAD,KAOC5B,EAAQL,OAAQ,CACjB,GAJDmC,GAIO,gBAAAb,GAAAO,OACLxB,SAAUM,cAASe,EAAcJ,QAClCA,EAAAO,MAEDxB,KAAAA,EAEA,MA+BIT,SAAQC,MAAM,qBAAA,CA7BjBsC,GAAAC,YAAA/B,OAEDM,UAAIW,KAAJc,YAAgB/B,EAEf,OAAAA,MAAAA,IAAAA,SAAAA,MAAAA,SAGCA,EAAQgC,GACAN,KAASO,KAAjBC,GACD,GAAAX,UAAAV,KAAAA,IAAAA,SAAAA,MAAAA,SAGCI,GACaW,KAAXK,KAAAC,GACE,GAAAC,YAAAA,IAAAA,OAAAA,MAAAA,SAGID,GAEL,MALC5B,UAAA8B,iBAAAF,OAAAA,KASNG,OAAIpB,GAAQO,QAKVc,MAAAA,WAAAA,QAAAA,KAAAA,gBAAAA,KAAAA,GAAAA,MAAAA,cAAAA,IAAAA,IAAAA,QAAAA,MAAAA,WAKD,IAVD,GASER,GAAKC,GACAb,EAAA,EAAAA,EAAA,EAAAA,IACLZ,GAHC,6BAGQiC,KAAKR,MAAd,GAAcA,KAAY/B,UAE5B,OAAAe,OAAAA,KAkCEyB,MAAQ,GAAIF,OA7BdG,QAAAA,WAiCF,QAAAC,KAAc,GAAAC,GAAAC,IAAAC,iBAAAD,KAAAF,EACZ,IAAMI,GAAMT,OAAOU,QACjBjC,UAAW,MA/BbU,OAAMiB,cAmCAO,EAAOX,OAAOU,QAClBjC,UAAW,YACXU,OAAQsB,IA9BXG,EAAAZ,OAAAU,QAkCGnC,IAAK,OACLI,QACIgB,OAAQ,uBACRN,OAAQ,SAlCZW,OAASW,IAuCLE,EAAab,OAAOU,QACxBjC,UAAW,cACXU,OAAQyB,IAGJE,EAAWd,OAAOU,QACtBnC,IAAK,QAvCPI,QACID,KAAK,SACTqC,YAAgBlC,iBAEfJ,UAAA,eACDU,OAAOT,IA2CDsC,EAAchB,OAAOU,QACzBnC,IAAK,OACLE,UAAW,kBACXU,OAAQ0B,IAxCRR,EA2CgBL,OAAOU,QAzC3BnC,IAAA,SAAcI,QA4CNM,KAAM,WAEVT,QAAS,MA7CXC,UAAYuB,kBACVvB,OAAAA,GAiDFL,QAAO6C,GAAGL,EAAM,SAAU,SAAA7C,GA7C1BA,EAAM4C,iBACJlC,EAAAA,IAAAA,EAAWqC,KAiDb1C,OAAO8C,UAAU,iBAAkB,SAAAnD,GA7CnC,GAAM6C,GAAOZ,EAAOU,MAElB/B,GACIgB,MAHNW,EAAAa,KAAAP,EAAAE,EAAAM,EAAAtD,KAAAA,MAAAA,cAAAA,IAAAA,IAAAA,MAAAA,MAAAA,SAWEqB,EAAAA,GAF+B,GAAjCkC,GAAArE,KAAAsE,KAAA,QAKMR,GAOJ3B,EAAQ0B,KAAAA,MAAAA,IANRtC,KACAI,KAAAA,OACIM,QAAMsC,KACRC,gBAMER,EAAAA,MAA4B,SAA5BA,EAAchB,KAAOU,OAAOE,EAAAa,OAChClD,GAAKqC,EAD2Ba,MAAAnE,OAAAoE,KAAAZ,EAAAxD,MAEhCmB,EAAAA,KAAAA,SACAU,EAAAA,MAAQ0B,UA0CRQ,EAAMM,MAvCFP,KAAAA,EAAYpB,MAChBzB,SAAAA,IAMAY,KAAAA,OAAQ6B,QAAAA,KAAAA,UAAAA,IAwCVJ,EAAKgB,QApCH7D,OAAAA,KAAM8D,qBAAAA,IAAAA,OAAAA,MAAAA,SAyCLjB,EAAME,EAAUM,EAAWtD,GArC9BM,EAAO8C,KAkDLN,EAAK3B,KAAK3B,MAAQ,OAjDJS,OAAMO,QAuClBC,IAAK,QArCPI,QAAqBM,KAAA,WAAQM,KAAA,SAyCvBjC,MAAO,SA5CfmB,UAAA,eAODU,OAAAyB,IA8CMA,EAAKa,MA9BTb,EAJDa,MAIOnE,MAAAQ,EAAA2D,MAXKzB,OAAAU,QACVW,IAAAA,QACArE,QAFFiC,KAGO,WACLoC,KAAQE,UACTjE,MAAAQ,EAAA2D,QAEDhD,UAAI,eACF4C,OAAOT,IAMLkB,EAAAA,UAAS,OAFAhB,EAAXxD,MAAAQ,EAAAiE,KAAAL,SAAAA,KAQFd,UAAAA,WAEAxC,QAAAA,KAAO4D,GAAAA,GAAAA,IAAAA,iBAAAA,KAAAA,EACR,IAAAX,GAAArE,KAAAsE,KAAA,QA2CMD,KACHA,KACArE,KAAKiF,OAAO,QA3CXrB,KAAME,UAAUM,KAGf7C,OAAAA,UAAK,iBADuB,WAE5BI,EAAAA,YAAAA,MAAAA,cAAAA,IAAAA,IAAAA,UAAAA,MAAAA,WASFiC,GAAAA,GAAAL,KACDc,EAAArE,KAAAsE,KAAA,QAwCDD,GAAQE,KAAKW,MAAMb,EArCjB,IAAAc,GAAIC,SAAapC,eAAc,aAC7BzB,GAAAA,UAD6B,EAO7BE,IAAAA,GAAWuB,OAAAU,QACXvB,IAAAA,QAR6BA,OAA/BgD,GAYD,KAAAd,EAAA/B,OAoCC,OAAA,CAhCH+B,GAAAgB,QAAA,SAAAN,EAAAN,GAoCG,GAAMa,GAAStC,OAAOU,QACpBnC,IAAK,KACLY,OAAQoD,EACR9D,UAAWsD,EAAKD,QAAU,UAAY,KAjC5CU,EAAcxC,OAAAU,QAAAnC,IAAA,KAsCRY,OAAQmD,EAtCA3D,QAwCJ8D,MAAO,SApCRR,EAAgBV,OAAKC,QAC3BjD,IAAA,KAyCGY,OAAQmD,EAvCZlE,QAAO8C,EAAUQ,KACfjD,UAAKiE,EAALZ,QAAA,UAAA,KA2CMa,EAAoB3C,OAAOU,QAC/BnC,IAAK,KACLY,OAAQmD,EACR3D,QAzCEiE,MAAO,SAIPT,EAAmBU,OAAAA,QACzBV,IAAAA,OA2CI1D,UAAW,wBAA0BsD,EAAKD,QAAU,QAAU,aAzClE3C,OAAMoD,IAANO,EAAA9C,OAAAU,QA8CInC,IAAK,SAzCTI,QACEM,KAAO,WA4CLR,UAAW,sBAzCf4C,QAAMgB,mDACJlD,OAAMmD,IAGJ7D,EAAWuB,OAAeU,QAHCnC,IAA7B,SA+CEI,QAzCI6D,KAAAA,WAEJrD,UAAQmD,wBACR3D,QAAO,mDAHgCQ,OAAzCwD,GASEpE,QAAAA,GAAKiE,EAD8B,QAAA,SAAAzE,GAEnCoB,EAAAA,iBACAX,EAAAA,QAASuD,EAH0BgB,EAAAC,EAAA3B,EAAAU,EAAAN,KA8CrCrD,OAAO6C,GAAG+B,EAAgB,QAAS,SAAAjF,GAvCnCA,EAAM4E,iBACJpE,EAAAA,QADsC+D,EAAAS,EAAAC,EAAA3B,EAAAU,EAAAN,KAAArD,OAAxC6C,GAAAgC,EAAA,QAAA,SAAAlF,GA6CE6E,EAAKM,OAAOzB,EAAOJ,KAnCnB5C,OAAAA,GAAAA,EAAW,QAAA,SAAAV,GACXoB,OAAAA,KAAQqD,kBAHVT,KAAAA,EA2CIN,MAAOA,WAAAA,IAAAA,UAAAA,MAAAA,SA9BTtC,EAAQwD,EAAAA,EAAAA,EAAAA,EAAAA,GAPV,8BAAAI,EAAAtE,WAWEF,EAAAA,UADuC,GAEvCI,EACIM,UAAM,gCAEVR,EAAWA,UAAA,GACXD,EAAAA,SAAAA,IANuC8D,EAAzC7D,UAAA,UA2CAsE,EAAetE,UAAY,4BAjC3BL,EAAUoE,UAAAA,UACRzE,EAAAA,SAAAA,GAqCJsD,EAAMI,GAASM,EAjCb3D,KAAAA,OAAO6C,QAAG+B,KAAAA,UAAgB3B,IACxBtD,OAAAA,KAAM8D,qBAAAA,IAAAA,SAAAA,MAAAA,SAqCLJ,EAAOJ,GAjCVjD,EAAAA,OAAAqD,EAAUwB,GACRL,KAAAA,OAAKM,QAAOzB,KAAOJ,UAAnBA,IACDjD,OAFD4D,KAAA,sBAAAvE,KAOIgE,IAF4B,QAAA0B,KAA9B3C,gBAAAD,KAAA4C,GADF,GAAA9C,UAAAA,GAtEF+C,YA6EDV,WAuCGW,IAAM,GAAIF","file":"app-min.js","sourcesContent":["\nclass Data {\n\n  create(key, data) {\n    key = key || prompt('Key:');\n    data = data || prompt('Data:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (typeof data === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    localStorage.setItem(key, data);\n  }\n\n  read(key) {\n    if (typeof key === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      console.error('No data');\n      return false;\n    }\n\n    return data;\n  }\n\n  update(key, data) {\n    key = key || prompt('Key:');\n    data = data || prompt('Data:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (typeof data === 'undefined') {\n      console.error('No data');\n      return false;\n    }\n\n    if (!localStorage.getItem(key)) {\n      console.error('No data found');\n      return false;\n    }\n\n    localStorage.setItem(key, data);\n  }\n\n  delete(key) {\n    key = key || prompt('Key:');\n\n    if (typeof key === 'undefined') {\n      console.error('No key');\n      return false;\n    }\n\n    if (!localStorage.getItem(key)) {\n      console.error('No data found');\n      return false;\n    }\n\n    localStorage.removeItem(key);\n  }\n}\n\nconst data = new Data();\n\nclass Events {\n\n  on(element, eventName, callback) {\n    element.addEventListener(eventName, callback, false);\n  }\n\n  subscribe(eventName, callback) {\n    document.addEventListener(eventName, callback, false);\n  }\n\n  send(eventName, details) {\n    details = details || {};\n\n    const event = new CustomEvent(eventName, {\n      detail: details\n    });\n\n    document.dispatchEvent(event);\n  }\n\n  deleteEvent() {\n    document.removeEventListener(eventName, callback, false);\n  }\n}\n\nconst events = new Events();\n\nclass Markup {\n\n  create(options) {\n    // tag\n    // content\n    // parent\n    // className\n    // id\n    // callback\n\n    const optionsDefault = {\n      tag: 'div',\n      content: '',\n      parent: 'body',\n      className: '',\n      id: '',\n      callback: undefined,\n      attrs: []\n    };\n\n    options = options || {};\n\n    for(let i in optionsDefault) {\n      if (!options.hasOwnProperty(i)) {\n        options[i] = optionsDefault[i];\n      }\n    }\n\n    let element;\n\n    if (options.tag === 'input#checkbox') {\n      element = document.createElement('input');\n      element.type = 'checkbox';\n      element.value = 1;\n    } else {\n      element = document.createElement(options.tag);\n    }\n\n    element.innerHTML = options.content;\n\n    if (options.className) {\n      element.className += options.className;\n    }\n\n    if (options.id) {\n      element.id = options.id;\n    }\n\n    if (options.tag === 'form') {\n      element.action = 'javascript:void(0)';\n      element.method = 'post';\n    }\n\n    if (options.attrs.length) {\n      options.attrs.forEach(attr => {\n        for (const name in attr) {\n          switch (name) {\n            default:\n              element[name] = attr[name];\n              break;\n          }\n        }\n      });\n    }\n\n    if (options.parent) {\n      const prnt = typeof options.parent === 'string'\n        ? document.querySelector(options.parent)\n        : options.parent;\n\n      if (!prnt) {\n        console.error('No element found');\n        return false;\n      }\n      prnt.appendChild(element);\n    } else {\n      document.body.appendChild(element);\n    }\n    return element;\n  }\n\n  update(query, content) {\n    const elements = this.find(query);\n    elements[0].innerHTML = content;\n  }\n\n  delete(query) {\n    const elements = this.find(query);\n    elements[0].remove();\n  }\n\n  find(query) {\n    const elements = document.querySelectorAll(query);\n    return elements;\n  }\n}\n\nconst markup = new Markup();\n\n\nclass Utils {\n\n  getId() {\n    let letters = 'abcdefghijklmnopqrstuvwxyz';\n    let id = '';\n    for (let i = 0; i < 6; i++ ) {\n      id += letters[Math.floor(Math.random() * 26)];\n    }\n    return id;\n  }\n}\n\nconst utils = new Utils();\n\nclass AddTodo {\n\n  constructor() {\n    const row = markup.create({\n      className: 'row',\n      parent: '#todo_add'\n    });\n\n    const cell = markup.create({\n      className: 'col-lg-12',\n      parent: row\n    });\n    \n    const form = markup.create({\n      tag: 'form',\n      attrs: [\n        { action: 'javascript:void(0)' },\n        { method: 'POST' }\n      ],\n      parent: cell\n    });\n    \n    const inputGroup = markup.create({\n      className: 'input-group',\n      parent: form\n    });\n\n    const addField = markup.create({\n      tag: 'input',\n      attrs: [\n        { type: 'text' },\n        { placeholder: 'Todo text...' }\n      ],\n      className: 'form-control',\n      parent: inputGroup\n    });\n\n    const buttonGroup = markup.create({\n      tag: 'span',\n      className: 'input-group-btn',\n      parent: inputGroup\n    });\n\n    const addButton = markup.create({\n      tag: 'button',\n      attrs: [\n        { type: 'submit' }\n      ],\n      content: 'Add',\n      className: 'btn btn-primary',\n      parent: buttonGroup\n    });\n\n    events.on(form, 'submit', event => {\n      event.preventDefault();\n      this.add(form, addField);\n    });\n\n    events.subscribe('edit-todo-item', event => {\n      var details = event.detail;\n\n      if (!details.todo) { return }\n\n      this.edit(form, addField, addButton, details);\n    });\n  }\n\n  add(form, addField) {\n    let todos = data.read('todos');\n\n    if (!todos) {\n      todos = [];\n      data.create('todos', JSON.stringify([]));\n    } else {\n      todos = JSON.parse(todos);\n    }\n\n    if (form.type && form.type.value === 'save' && form.index) {\n      todos[+form.index.value].text = addField.value;\n      form.type.remove();\n      form.index.remove();\n    } else {\n      todos.push({\n        text: addField.value,\n        checked: false\n      });\n    }\n\n    data.update('todos', JSON.stringify(todos));\n\n    form.reset();\n\n    events.send('get-todos-list');\n  }\n\n  edit(form, addField, addButton, details) {\n    if (!form.type) {\n      var typeField = markup.create({\n        tag: 'input',\n        attrs: [\n          { type: 'hidden' },\n          { name: 'type' },\n          { value: 'save' }\n        ],\n        className: 'form-control',\n        parent: form\n      });\n    } else {\n      form.type.value = 'save';\n    }\n\n    if (!form.index) {\n      var indexField = markup.create({\n        tag: 'input',\n        attrs: [\n          { type: 'hidden' },\n          { name: 'index' },\n          { value: details.index }\n        ],\n        className: 'form-control',\n        parent: form\n      });\n    } else {\n      form.index.value = details.index;\n    }\n\n    addButton.innerHTML = 'Save';\n    addField.value = details.todo.text;\n  }\n}\n\n\nclass ListTodos {\n\n  constructor() {\n    let todos = data.read('todos');\n    if (!todos) {\n      todos = [];\n      data.update('todos', JSON.stringify(todos));\n    }\n\n    events.subscribe('get-todos-list', () => {\n      this.getList();\n    });\n  }\n\n  getList() {\n    const self = this;\n    let todos = data.read('todos');\n    todos = JSON.parse(todos);\n\n    const todosEl = document.getElementById('todo_items');\n    todosEl.innerHTML = '';\n\n    const todosBodyEl = markup.create({\n      tag: 'tbody',\n      parent: todosEl\n    });\n\n    if (!todos.length) {\n      return false\n    }\n\n    todos.forEach((todo, index) => {\n      const todoEl = markup.create({\n        tag: 'tr',\n        parent: todosBodyEl,\n        className: todo.checked ? 'success' : ''\n      });\n\n      const todoCellCheckboxEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        attrs: [\n          { width: '30' }\n        ]\n      });\n\n      const todoCellTextEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        content: todo.text,\n        className: todo.checked ? 'checked' : ''\n      });\n\n      const todoCellActionsEl = markup.create({\n        tag: 'td',\n        parent: todoEl,\n        attrs: [\n          { width: '70' }\n        ]\n      });\n\n      const todoCheckboxEl = markup.create({\n        tag: 'span',\n        className: 'glyphicon glyphicon-' + (todo.checked ? 'check' : 'unchecked'),\n        parent: todoCellCheckboxEl\n      });\n\n      const todoActionEditEl = markup.create({\n        tag: 'button',\n        attrs: [\n          { type: 'button' }\n        ],\n        className: 'btn btn-info btn-xs',\n        content: '<span class=\"glyphicon glyphicon-pencil\"></span>',\n        parent: todoCellActionsEl\n      });\n\n      const todoActionDeleteEl = markup.create({\n        tag: 'button',\n        attrs: [\n          { type: 'button' }\n        ],\n        className: 'btn btn-danger btn-xs',\n        content: '<span class=\"glyphicon glyphicon-remove\"></span>',\n        parent: todoCellActionsEl\n      });\n\n      events.on(todoCellCheckboxEl, 'click', event => {\n        event.preventDefault();\n        self.doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index);\n      });\n\n      events.on(todoCellTextEl, 'click', event => {\n        event.preventDefault();\n        self.doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index);\n      });\n\n      events.on(todoActionDeleteEl, 'click', event => {\n        self.delete(index, todos);\n      });\n\n      events.on(todoActionEditEl, 'click', event => {\n        events.send('edit-todo-item', {\n          todo: todo,\n          index: index\n        });\n      });\n    });\n  };\n\n  doCheck(todoEl, todoCheckboxEl, todoCellTextEl, todos, todo, index) {\n    const isChecked = todoCheckboxEl.className === 'glyphicon glyphicon-check'\n\n    if (isChecked) {\n      todoEl.className = '';\n      todoCheckboxEl.className = 'glyphicon glyphicon-unchecked';\n      todoCellTextEl.className = '';\n      todo.checked = false;\n    } else {\n      todoEl.className = 'success';\n      todoCheckboxEl.className = 'glyphicon glyphicon-check';\n      todoCellTextEl.className = 'checked';\n      todo.checked = true;\n    }\n\n    todos[index] = todo;\n    data.update('todos', JSON.stringify(todos));\n    events.send('get-todos-list');\n  }\n\n  delete(index, todos) {\n    todos.splice(index, 1);\n    data.update('todos', JSON.stringify(todos));\n    events.send('get-todos-list');\n  }\n}\n\n\nclass App {\n  constructor() {\n    const addTodo = new AddTodo();\n    const listTodos = new ListTodos();\n    listTodos.getList();\n  }\n}\n\n\nconst app = new App();\n"]}